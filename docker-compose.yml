services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: wallet-db
    environment:
      POSTGRES_DB: walletdb
      POSTGRES_USER: wallet_user
      POSTGRES_PASSWORD: wallet_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wallet_user -d walletdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: wallet-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispass
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: wallet-kafka
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Wallet Service
#  wallet-service:
#    build: .
#    container_name: wallet-service
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/walletdb
#      SPRING_DATASOURCE_USERNAME: wallet_user
#      SPRING_DATASOURCE_PASSWORD: wallet_pass
#      SPRING_DATA_REDIS_HOST: redis
#      SPRING_DATA_REDIS_PASSWORD: redispass
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    ports:
#      - "8080:8080"
#    depends_on:
#      db:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
#      kafka:
#        condition: service_healthy
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#      start_period: 60s

volumes:
  postgres_data:
  redis_data:
  kafka_data:

networks:
  default:
    name: wallet-network
